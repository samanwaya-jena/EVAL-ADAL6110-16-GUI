<?xml version="1.0"?>
<config>

  <layout>
    <!-- default layout at startup.  Tells which windows and parts of
	       screen are displayed. -->
    <displaySettingsWindow>false</displaySettingsWindow>
    <display2DWindow>true</display2DWindow>
    <displayTableViewWindow>false</displayTableViewWindow>
    <display3DWindow>false</display3DWindow>
    <displayScopeWindow>false</displayScopeWindow>
    <displayCameraWindow>true</displayCameraWindow>

    <!-- velocity units: display velocity in km/h or m/s
	       0:  Units are in m/s
	       1: Units are in km/h -->
    <velocityUnits>1</velocityUnits>

    <!-- displayed logo: empty string means no logo -->
    <logoFileName>:/LLogos/Images/Logos/Phantom-Black-logo.png</logoFileName>

    <!-- Name of file containing displayed icon -->
    <iconFileName>:/Logos/Images/Logos/AWLQtDemo.ico</iconFileName>

    <!-- displayShowSize:: Default display mode for the main window
         Possible values are:
         "FullScreen" - Show full screen
         "Maximized" - Show maximized
         "Minimized" - Show Minimized
         "Normal" = Show normal
         Defaults to "Normal"
         -->
    <displayShowSize>FullScreen</displayShowSize>
  </layout>

  <debug>
    <enableDebugFile>false</enableDebugFile>
    <enableLogFile>false</enableLogFile>
  </debug>

   <video>
    <displayCrosshair>false</displayCrosshair>
    <displayTime> true </displayTime>
  </video>
  
  <receivers>
    <receiverQty>3</receiverQty>
    <receiver0>
      <!-- The receiverType determines which desccendant of the Receiver class is used in the configuration.
		       This is greatly incluence by  comm port communications.
		       Valid values currently possible are "EasySyncCAN",  "KvaserLeaf" or "Simulator" (case sensistive!) -->
      <receiverType>KvaserLeaf</receiverType>

      <!-- The receiverRegisterSet determines which version of the RegisterConfiguration is accessible for the sensor.
		       This is usually incluenced by model and firmare version.
		       Valid values currently possible are "registerDescription_RevC",  "registerDescription_RevD" "registerDescription_RevE"(case sensistive!) for AWL -->
      <receiverRegisterSet>registerDescription_RevE</receiverRegisterSet>

      <!-- The receiverChannelGeometry identifies which version of the sensor Geometry is used..
		       The sensor geomtretry describes the optical configuration (qty and optical FOVs of each channel) and also depends on lensing.
		       Valid values currently possible are "GeometryAWL7",  and "GeometryAWL16Array" (case sensistive!) -->
      <receiverChannelGeometry>GeometryAWL16Array</receiverChannelGeometry>

      <!-- The commPort is used only by EasySyncCAN recevivers -->  
      <commPort>COM15</commPort>

      <!-- The kVaserChannel is used only by KvaserLeaf recevivers -->
      <kvaserChannel>0</kvaserChannel>

      <!-- The canBitRate in kbps should correspond to the units pre-defined bit rate
           Supported Values are:
              		canRate1Mbps = 1000,
		              canRate500kbps = 500,
		              canRate250kbps = 250,
		              canRate125kbps = 125,
		              canRate100kbps = 100,
		              canRate50kbps = 50,
		              canRate10kps = 10
            If not defined the default value is 1 MBit/s (1000) (which is default bit rate for all AWL Units)              
           -->
      <canBitRate>1000</canBitRate>

      <!-- Frame rate in Hz.  Set to 0 to use default frame rate -->
      <frameRate>0</frameRate>

      <!-- Channel mask: Controls which channels are
		       processed at AWL Unit Level -->
      <!--This is a bit mask for channels 0 to 7. Enter the mask in decimal -->
      <channelMask>255</channelMask>
;
      <!-- Message mask flags: 
		       Controls which messages are sent to client unit
		       if msgEnableObstacle is true, all displays will
		       be configured for track mode operation -->
      <msgEnableObstacle>true</msgEnableObstacle>
      <msgEnableDistance_1_4>false</msgEnableDistance_1_4>
      <msgEnableDistance_5_8>false</msgEnableDistance_5_8>
      <msgEnableIntensity_1_4>false</msgEnableIntensity_1_4>
      <msgEnableIntensity_5_8>false</msgEnableIntensity_5_8>
      <msgEnableDistanceIntensity>false</msgEnableDistanceIntensity>

 
      <sensorGeometry>
        <position>
          <!-- positionFromBumper -->
          <forward>0</forward>
          <!-- lateral offet -->
          <left>0.0</left>
          <!-- height -->
          <up>0.0</up>
         </position>
        <orientation>
          <pitch>0.0</pitch>
          <roll>0.0</roll>
          <yaw>0.0</yaw>
        </orientation>
      </sensorGeometry>

      <displayedRangeMin>3.0</displayedRangeMin>
      <displayedRangeMax>50</displayedRangeMax>
      <rangeOffset>0.0</rangeOffset>
    </receiver0>
    
      <receiver1>
      <!-- The receiverType determines which desccendant of the Receiver class is used in the configuration.
		       This is greatly incluence by  comm port communications.
		       Valid values currently possible are "EasySyncCAN",  "KvaserLeaf" or "Simulator" (case sensistive!) -->
      <receiverType>KvaserLeaf</receiverType>

      <!-- The receiverRegisterSet determines which version of the RegisterConfiguration is accessible for the sensor.
		       This is usually incluenced by model and firmare version.
		       Valid values currently possible are "registerDescription_RevC",  "registerDescription_RevD" "registerDescription_RevE"(case sensistive!) for AWL -->
      <receiverRegisterSet>registerDescription_RevE</receiverRegisterSet>

      <!-- The receiverChannelGeometry identifies which version of the sensor Geometry is used..
		       The sensor geomtretry describes the optical configuration (qty and optical FOVs of each channel) and also depends on lensing.
		       Valid values currently possible are "GeometryAWL7",  and "GeometryAWL16Array" (case sensistive!) -->
      <receiverChannelGeometry>GeometryAWL16Array</receiverChannelGeometry>

      <!-- The commPort is used only by EasySyncCAN recevivers -->  
      <commPort>COM15</commPort>

      <!-- The kVaserChannel is used only by KvaserLeaf recevivers -->
      <kvaserChannel>0</kvaserChannel>

      <!-- The canBitRate in kbps should correspond to the units pre-defined bit rate
           Supported Values are:
              		canRate1Mbps = 1000,
		              canRate500kbps = 500,
		              canRate250kbps = 250,
		              canRate125kbps = 125,
		              canRate100kbps = 100,
		              canRate50kbps = 50,
		              canRate10kps = 10
            If not defined the default value is 1 MBit/s (1000) (which is default bit rate for all AWL Units)              
           -->
      <canBitRate>1000</canBitRate>

      <!-- Frame rate in Hz.  Set to 0 to use default frame rate -->
      <frameRate>0</frameRate>

      <!-- Channel mask: Controls which channels are
		       processed at AWL Unit Level -->
      <!--This is a bit mask for channels 0 to 7. Enter the mask in decimal -->
      <channelMask>135</channelMask>
;
      <!-- Message mask flags: 
		       Controls which messages are sent to client unit
		       if msgEnableObstacle is true, all displays will
		       be configured for track mode operation -->
      <msgEnableObstacle>true</msgEnableObstacle>
      <msgEnableDistance_1_4>false</msgEnableDistance_1_4>
      <msgEnableDistance_5_8>false</msgEnableDistance_5_8>
      <msgEnableIntensity_1_4>false</msgEnableIntensity_1_4>
      <msgEnableIntensity_5_8>false</msgEnableIntensity_5_8>
      <msgEnableDistanceIntensity>false</msgEnableDistanceIntensity>

 
      <sensorGeometry>
        <position>
          <!-- positionFromBumper -->
          <forward>-4</forward>
          <!-- lateral offet -->
          <left>0.0</left>
          <!-- height -->
          <up>0.0</up>
         </position>
        <orientation>
          <pitch>0.0</pitch>
          <roll>0.0</roll>
          <yaw>135.0</yaw>
        </orientation>
      </sensorGeometry>

      <displayedRangeMin>3.0</displayedRangeMin>
      <displayedRangeMax>50</displayedRangeMax>
      <rangeOffset>0.0</rangeOffset>
    </receiver1>
    
     <receiver2>
      <!-- The receiverType determines which desccendant of the Receiver class is used in the configuration.
		       This is greatly incluence by  comm port communications.
		       Valid values currently possible are "EasySyncCAN",  "KvaserLeaf" or "Simulator" (case sensistive!) -->
      <receiverType>KvaserLeaf</receiverType>

      <!-- The receiverRegisterSet determines which version of the RegisterConfiguration is accessible for the sensor.
		       This is usually incluenced by model and firmare version.
		       Valid values currently possible are "registerDescription_RevC",  "registerDescription_RevD" "registerDescription_RevE"(case sensistive!) for AWL -->
      <receiverRegisterSet>registerDescription_RevE</receiverRegisterSet>

      <!-- The receiverChannelGeometry identifies which version of the sensor Geometry is used..
		       The sensor geomtretry describes the optical configuration (qty and optical FOVs of each channel) and also depends on lensing.
		       Valid values currently possible are "GeometryAWL7",  and "GeometryAWL16Array" (case sensistive!) -->
      <receiverChannelGeometry>GeometryAWL16Array</receiverChannelGeometry>

      <!-- The commPort is used only by EasySyncCAN recevivers -->  
      <commPort>COM15</commPort>

      <!-- The kVaserChannel is used only by KvaserLeaf recevivers -->
      <kvaserChannel>0</kvaserChannel>

      <!-- The canBitRate in kbps should correspond to the units pre-defined bit rate
           Supported Values are:
              		canRate1Mbps = 1000,
		              canRate500kbps = 500,
		              canRate250kbps = 250,
		              canRate125kbps = 125,
		              canRate100kbps = 100,
		              canRate50kbps = 50,
		              canRate10kps = 10
            If not defined the default value is 1 MBit/s (1000) (which is default bit rate for all AWL Units)              
           -->
      <canBitRate>1000</canBitRate>

      <!-- Frame rate in Hz.  Set to 0 to use default frame rate -->
      <frameRate>0</frameRate>

      <!-- Channel mask: Controls which channels are
		       processed at AWL Unit Level -->
      <!--This is a bit mask for channels 0 to 7. Enter the mask in decimal -->
      <channelMask>255</channelMask>
;
      <!-- Message mask flags: 
		       Controls which messages are sent to client unit
		       if msgEnableObstacle is true, all displays will
		       be configured for track mode operation -->
      <msgEnableObstacle>true</msgEnableObstacle>
      <msgEnableDistance_1_4>false</msgEnableDistance_1_4>
      <msgEnableDistance_5_8>false</msgEnableDistance_5_8>
      <msgEnableIntensity_1_4>false</msgEnableIntensity_1_4>
      <msgEnableIntensity_5_8>false</msgEnableIntensity_5_8>
      <msgEnableDistanceIntensity>false</msgEnableDistanceIntensity>

 
      <sensorGeometry>
        <position>
          <!-- positionFromBumper -->
          <forward>-4</forward>
          <!-- lateral offet -->
          <left>0.0</left>
          <!-- height -->
          <up>0.0</up>
         </position>
        <orientation>
          <pitch>0.0</pitch>
          <roll>0.0</roll>
          <yaw>225.0</yaw>
        </orientation>
      </sensorGeometry>

      <displayedRangeMin>1.0</displayedRangeMin>
      <displayedRangeMax>25</displayedRangeMax>
      <rangeOffset>0.0</rangeOffset>
    </receiver2>
  
    <receiver3>
      <!-- The receiverType determines which desccendant of the Receiver class is used in the configuration.
		       This is greatly incluence by  comm port communications.
		       Valid values currently possible are "EasySyncCAN",  "KvaserLeaf" or "Simulator" (case sensistive!) -->
      <receiverType>KvaserLeaf</receiverType>

      <!-- The receiverRegisterSet determines which version of the RegisterConfiguration is accessible for the sensor.
		       This is usually incluenced by model and firmare version.
		       Valid values currently possible are "registerDescription_RevC",  "registerDescription_RevD" "registerDescription_RevE"(case sensistive!) for AWL -->
      <receiverRegisterSet>registerDescription_RevE</receiverRegisterSet>

      <!-- The receiverChannelGeometry identifies which version of the sensor Geometry is used..
		       The sensor geomtretry describes the optical configuration (qty and optical FOVs of each channel) and also depends on lensing.
		       Valid values currently possible are "GeometryAWL7",  and "GeometryAWL16Array" (case sensistive!) -->
      <receiverChannelGeometry>GeometryAWL16Array</receiverChannelGeometry>

      <!-- The commPort is used only by EasySyncCAN recevivers -->  
      <commPort>COM15</commPort>

      <!-- The kVaserChannel is used only by KvaserLeaf recevivers -->
      <kvaserChannel>0</kvaserChannel>

      <!-- The canBitRate in kbps should correspond to the units pre-defined bit rate
           Supported Values are:
              		canRate1Mbps = 1000,
		              canRate500kbps = 500,
		              canRate250kbps = 250,
		              canRate125kbps = 125,
		              canRate100kbps = 100,
		              canRate50kbps = 50,
		              canRate10kps = 10
            If not defined the default value is 1 MBit/s (1000) (which is default bit rate for all AWL Units)              
           -->
      <canBitRate>1000</canBitRate>

      <!-- Frame rate in Hz.  Set to 0 to use default frame rate -->
      <frameRate>0</frameRate>

      <!-- Channel mask: Controls which channels are
		       processed at AWL Unit Level -->
      <!--This is a bit mask for channels 0 to 7. Enter the mask in decimal -->
      <channelMask>255</channelMask>
;
      <!-- Message mask flags: 
		       Controls which messages are sent to client unit
		       if msgEnableObstacle is true, all displays will
		       be configured for track mode operation -->
      <msgEnableObstacle>true</msgEnableObstacle>
      <msgEnableDistance_1_4>false</msgEnableDistance_1_4>
      <msgEnableDistance_5_8>false</msgEnableDistance_5_8>
      <msgEnableIntensity_1_4>false</msgEnableIntensity_1_4>
      <msgEnableIntensity_5_8>false</msgEnableIntensity_5_8>
      <msgEnableDistanceIntensity>false</msgEnableDistanceIntensity>

 
      <sensorGeometry>
        <position>
          <!-- positionFromBumper -->
          <forward>0</forward>
          <!-- lateral offet -->
          <left>0.0</left>
          <!-- height -->
          <up>0.0</up>
         </position>
        <orientation>
          <pitch>0.0</pitch>
          <roll>0.0</roll>
          <yaw>45</yaw>
        </orientation>
      </sensorGeometry>

      <displayedRangeMin>1.0</displayedRangeMin>
      <displayedRangeMax>25</displayedRangeMax>
      <rangeOffset>0.0</rangeOffset>
    </receiver3>
    
      <receiver4>
      <!-- The receiverType determines which desccendant of the Receiver class is used in the configuration.
		       This is greatly incluence by  comm port communications.
		       Valid values currently possible are "EasySyncCAN",  "KvaserLeaf" or "Simulator" (case sensistive!) -->
      <receiverType>KvaserLeaf</receiverType>

      <!-- The receiverRegisterSet determines which version of the RegisterConfiguration is accessible for the sensor.
		       This is usually incluenced by model and firmare version.
		       Valid values currently possible are "registerDescription_RevC",  "registerDescription_RevD" "registerDescription_RevE"(case sensistive!) for AWL -->
      <receiverRegisterSet>registerDescription_RevE</receiverRegisterSet>

      <!-- The receiverChannelGeometry identifies which version of the sensor Geometry is used..
		       The sensor geomtretry describes the optical configuration (qty and optical FOVs of each channel) and also depends on lensing.
		       Valid values currently possible are "GeometryAWL7",  and "GeometryAWL16Array" (case sensistive!) -->
      <receiverChannelGeometry>GeometryAWL16Array</receiverChannelGeometry>

      <!-- The commPort is used only by EasySyncCAN recevivers -->  
      <commPort>COM15</commPort>

      <!-- The kVaserChannel is used only by KvaserLeaf recevivers -->
      <kvaserChannel>0</kvaserChannel>

      <!-- The canBitRate in kbps should correspond to the units pre-defined bit rate
           Supported Values are:
              		canRate1Mbps = 1000,
		              canRate500kbps = 500,
		              canRate250kbps = 250,
		              canRate125kbps = 125,
		              canRate100kbps = 100,
		              canRate50kbps = 50,
		              canRate10kps = 10
            If not defined the default value is 1 MBit/s (1000) (which is default bit rate for all AWL Units)              
           -->
      <canBitRate>1000</canBitRate>

      <!-- Frame rate in Hz.  Set to 0 to use default frame rate -->
      <frameRate>0</frameRate>

      <!-- Channel mask: Controls which channels are
		       processed at AWL Unit Level -->
      <!--This is a bit mask for channels 0 to 7. Enter the mask in decimal -->
      <channelMask>255</channelMask>
;
      <!-- Message mask flags: 
		       Controls which messages are sent to client unit
		       if msgEnableObstacle is true, all displays will
		       be configured for track mode operation -->
      <msgEnableObstacle>true</msgEnableObstacle>
      <msgEnableDistance_1_4>false</msgEnableDistance_1_4>
      <msgEnableDistance_5_8>false</msgEnableDistance_5_8>
      <msgEnableIntensity_1_4>false</msgEnableIntensity_1_4>
      <msgEnableIntensity_5_8>false</msgEnableIntensity_5_8>
      <msgEnableDistanceIntensity>false</msgEnableDistanceIntensity>

 
      <sensorGeometry>
        <position>
          <!-- positionFromBumper -->
          <forward>-4</forward>
          <!-- lateral offet -->
          <left>0.0</left>
          <!-- height -->
          <up>0.0</up>
         </position>
        <orientation>
          <pitch>0.0</pitch>
          <roll>0.0</roll>
          <yaw>180.0</yaw>
        </orientation>
      </sensorGeometry>

      <displayedRangeMin>1.0</displayedRangeMin>
      <displayedRangeMax>25</displayedRangeMax>
      <rangeOffset>0.0</rangeOffset>
    </receiver4>
    
     <receiver5>
      <!-- The receiverType determines which desccendant of the Receiver class is used in the configuration.
		       This is greatly incluence by  comm port communications.
		       Valid values currently possible are "EasySyncCAN",  "KvaserLeaf" or "Simulator" (case sensistive!) -->
      <receiverType>KvaserLeaf</receiverType>

      <!-- The receiverRegisterSet determines which version of the RegisterConfiguration is accessible for the sensor.
		       This is usually incluenced by model and firmare version.
		       Valid values currently possible are "registerDescription_RevC",  "registerDescription_RevD" "registerDescription_RevE"(case sensistive!) for AWL -->
      <receiverRegisterSet>registerDescription_RevE</receiverRegisterSet>

      <!-- The receiverChannelGeometry identifies which version of the sensor Geometry is used..
		       The sensor geomtretry describes the optical configuration (qty and optical FOVs of each channel) and also depends on lensing.
		       Valid values currently possible are "GeometryAWL7",  and "GeometryAWL16Array" (case sensistive!) -->
      <receiverChannelGeometry>GeometryAWL16Array</receiverChannelGeometry>

      <!-- The commPort is used only by EasySyncCAN recevivers -->  
      <commPort>COM15</commPort>

      <!-- The kVaserChannel is used only by KvaserLeaf recevivers -->
      <kvaserChannel>0</kvaserChannel>

      <!-- The canBitRate in kbps should correspond to the units pre-defined bit rate
           Supported Values are:
              		canRate1Mbps = 1000,
		              canRate500kbps = 500,
		              canRate250kbps = 250,
		              canRate125kbps = 125,
		              canRate100kbps = 100,
		              canRate50kbps = 50,
		              canRate10kps = 10
            If not defined the default value is 1 MBit/s (1000) (which is default bit rate for all AWL Units)              
           -->
      <canBitRate>1000</canBitRate>

      <!-- Frame rate in Hz.  Set to 0 to use default frame rate -->
      <frameRate>0</frameRate>

      <!-- Channel mask: Controls which channels are
		       processed at AWL Unit Level -->
      <!--This is a bit mask for channels 0 to 7. Enter the mask in decimal -->
      <channelMask>255</channelMask>
;
      <!-- Message mask flags: 
		       Controls which messages are sent to client unit
		       if msgEnableObstacle is true, all displays will
		       be configured for track mode operation -->
      <msgEnableObstacle>true</msgEnableObstacle>
      <msgEnableDistance_1_4>false</msgEnableDistance_1_4>
      <msgEnableDistance_5_8>false</msgEnableDistance_5_8>
      <msgEnableIntensity_1_4>false</msgEnableIntensity_1_4>
      <msgEnableIntensity_5_8>false</msgEnableIntensity_5_8>
      <msgEnableDistanceIntensity>false</msgEnableDistanceIntensity>

 
      <sensorGeometry>
        <position>
          <!-- positionFromBumper -->
          <forward>0.0</forward>
          <!-- lateral offet -->
          <left>0.0</left>
          <!-- height -->
          <up>0.0</up>
         </position>
        <orientation>
          <pitch>0.0</pitch>
          <roll>0.0</roll>
          <yaw>315.0</yaw>
        </orientation>
      </sensorGeometry>

      <displayedRangeMin>1.0</displayedRangeMin>
      <displayedRangeMax>25</displayedRangeMax>
      <rangeOffset>0.0</rangeOffset>
    </receiver5>
    </receivers>

  <cameras>
    <cameraQty>1</cameraQty>

    <camera0>
      <!-- cameraName:
	    Camera index, as used in openCV.
       Indexes start at 0, up to 99. 
       To the index, you a can add a number (multiple of 100) to specify specific OpenCV camera driver handler.
       XIMEA Cameras, add 1100 to the camera index (default XIMEA camera would be "1100").
       A non-numeric camera name can be used to specify a video file.-->
      <cameraName>1100</cameraName>  <!-- Camera #1 is the computer webcam in a 2 camera setup -->

      <!-- cameraFlip:
       if true, 180 degree rotation of the camera image, 
       for cameras that need to be fixed upside down. -->
      <cameraFlip>true</cameraFlip>

      <position>
        <!-- positionFromBumper -->
        <forward>0</forward>
        <!-- lateral offet -->
        <left>0</left>
        <!-- height -->
        <up>0</up>
      </position>
      <orientation>
        <pitch>0.0</pitch>
        <roll>0.0</roll>
        <yaw>0.0</yaw>
      </orientation>

     <!-- XIMEA with 8mm lensing (M12 Lenses PT-0820BMP) -->
      <fov>
        <x>45.0</x>
        <y>34.0</y>
      </fov>
      <radialCorrectionK1>-.04</radialCorrectionK1>
      <radialCorrectionK2>0.0</radialCorrectionK2>
    </camera0>

    <cameraWebcamSample>
      <!-- cameraName:
	    Camera index, as used in openCV.
       Indexes start at 0, up to 99. 
       To the index, you a can add a number (multiple of 100) to specify specific OpenCV camera driver handler.
       XIMEA Cameras, add 1100 to the camera index (default XIMEA camera would be "1100").
       A non-numeric camera name can be used to specify a video file.-->
      <cameraName>0</cameraName> <!-- Camera #1 is the computer webcam in a 2 camera setup -->

      <!-- cameraFlip:
       if true, 180 degree rotation of the camera image, 
       for cameras that need to be fixed upside down. -->
      <cameraFlip>false</cameraFlip>

      <position>
        <!-- positionFromBumper -->
        <forward>0</forward>
        <!-- lateral offet -->
        <left>0</left>
        <!-- height -->
        <up>0</up>
      </position>
      <orientation>
        <pitch>0.0</pitch>
        <roll>0.0</roll>
        <yaw>0.0</yaw>
      </orientation>

        <!-- MS_LIFECAM_HD5000 @640x360 -->
      <fov>
        <x>45.0</x>
        <y>39.0</y>
      </fov>
      <!-- radial distorsion correction parameters -->
      <radialCorrectionK1>0.0</radialCorrectionK1>
      <radialCorrectionK2>0.0</radialCorrectionK2>
    </cameraWebcamSample>


    <cameraXimea3_6mmSample>
      <!-- cameraName:
	    Camera index, as used in openCV.
       Indexes start at 0, up to 99. 
       To the index, you a can add a number (multiple of 100) to specify specific OpenCV camera driver handler.
       XIMEA Cameras, add 1100 to the camera index.
       An non-numeric camera name can be used to specify a video file.-->
      <cameraName>1100</cameraName> <!-- Camera #1100 is first Ximea in a 2 camera setup -->

      <!-- cameraFlip:
       if true, 180 degree rotation of the camera image, 
       for cameras that need to be fixed upside down. -->
      <cameraFlip>true</cameraFlip>

      <position>
        <!-- positionFromBumper -->
        <forward>0</forward>
        <!-- lateral offet -->
        <left>0.0</left>
        <!-- height -->
        <up>0</up>
      </position>
      <orientation>
        <pitch>0.0</pitch>
        <roll>0.0</roll>
        <yaw>0.0</yaw>
      </orientation>

      <!-- XIMEA with 3.6mm lensing. F1.8 -->
      <fov>
        <x>96.75</x>
        <y>72.5</y>
      </fov>
      <!-- radial distorsion correction parameters -->
      <radialCorrectionK1>-.16</radialCorrectionK1>
      <radialCorrectionK2>0.0</radialCorrectionK2>
    </cameraXimea3_6mmSample>

    <cameraXimea6mmSample>
      <!-- cameraName:
	    Camera index, as used in openCV.
       Indexes start at 0, up to 99. 
       To the index, you a can add a number (multiple of 100) to specify specific OpenCV camera driver handler.
       XIMEA Cameras, add 1100 to the camera index.
       An non-numeric camera name can be used to specify a video file.-->
      <cameraName>1100</cameraName>
      <!-- Camera #1100 is first Ximea in a 2 camera setup -->

      <!-- cameraFlip:
       if true, 180 degree rotation of the camera image, 
       for cameras that need to be fixed upside down. -->
      <cameraFlip>true</cameraFlip>

      <position>
        <!-- positionFromBumper -->
        <forward>0</forward>
        <!-- lateral offet -->
        <left>0.0</left>
        <!-- height -->
        <up>0</up>
      </position>
      <orientation>
        <pitch>0.0</pitch>
        <roll>0.0</roll>
        <yaw>0.0</yaw>
      </orientation>

      <!-- XIMEA with 6mm lensing (M12 Lenses PT-0620BMP) -->
      <fov>
        <x>54.6</x>
        <y>41.3</y>
      </fov>
      <radialCorrectionK1>-.06</radialCorrectionK1>
      <radialCorrectionK2>0.0</radialCorrectionK2>
    </cameraXimea6mmSample>

    <cameraXimea8mmSample>
      <!-- cameraName:
	    Camera index, as used in openCV.
       Indexes start at 0, up to 99. 
       To the index, you a can add a number (multiple of 100) to specify specific OpenCV camera driver handler.
       XIMEA Cameras, add 1100 to the camera index.
       An non-numeric camera name can be used to specify a video file.-->
      <cameraName>1100</cameraName>
      <!-- Camera #1100 is first Ximea in a 2 camera setup -->

      <!-- cameraFlip:
       if true, 180 degree rotation of the camera image, 
       for cameras that need to be fixed upside down. -->
      <cameraFlip>true</cameraFlip>

      <position>
        <!-- positionFromBumper -->
        <forward>0</forward>
        <!-- lateral offet -->
        <left>0.0</left>
        <!-- height -->
        <up>0</up>
      </position>
      <orientation>
        <pitch>0.0</pitch>
        <roll>0.0</roll>
        <yaw>0.0</yaw>
      </orientation>

      <!-- XIMEA with 8mm lensing (M12 Lenses PT-0820BMP) -->
      <fov>
        <x>45.0</x>
        <y>34.0</y>
      </fov>
      <radialCorrectionK1>-.04</radialCorrectionK1>
      <radialCorrectionK2>0.0</radialCorrectionK2>

    </cameraXimea8mmSample>
  </cameras>
  

  
  <displayTableView>
    <displayedDetectionsPerChannelInTableView>2</displayedDetectionsPerChannelInTableView>
  </displayTableView>

  <display2D>
    <carWidth>1.78</carWidth>
    <!-- Car width in meters -->
    <carLength>4.53</carLength>
    <!-- Car width in meters -->
    <carHeight>1.44</carHeight>
    <!-- LaneWidth in meters -->
    <laneWidth>3.7</laneWidth>
    <!--Lane width in meters -->

    <!-- velocity for colorCoding in m/s -->
    <maxVelocity>30.0</maxVelocity>

    <!-- zeroVelocity is velocity at which we consider 
	     a target to be static (-zeroVelocity to +zeroVelocity) -->
    <!-- in m/s -->
    <zeroVelocity>1.0</zeroVelocity>

    <!-- Merge detection Mode
	     0:		eNoMerge - don't merge targets
	     1: 		eRadial - According to radial distance
	     2:		eLongitudinal - According to bumper distance -->
    <mergeDetectionMode>0</mergeDetectionMode>

    <!-- mergeDisplayMode 
	     0: NONE
	     1: Rectangle under detection 
	        (Still display distance individually)
	     2: Rectangle without detection, display only one distance
	     3: Rectangle with detections, but only one distance -->
    <mergeDisplayMode>0</mergeDisplayMode>

    <!-- measureMode
	     0: Radial
	     1: Longitudinal distance from bumper 
       2: Cartesian coordinates from bumper -->
    <measureMode>1</measureMode>

    <!-- colorCode
	     0: Colors indicate distances
	     1: Colors indicate speed 
       2: Colors indicate obstacle type according to classifier
       3: Colors correspond to channel "color"
       4: Colors indicate Threat Level-->
    <colorCode>4</colorCode>
   
    <!-- displayDistances
	     0: Hide all distances
	     1: Show all distances 
     -->
    <displayDistances>0</displayDistances>


    <!-- displayZoom
	     0: Display only area to the front of car
	     1: Display front and rear of car 
       2: Display from displayedRangeMin to displayedRangeMax (autoZoom)
     -->
    <displayZoom>0</displayZoom>

    <!-- mergeAcceptance
       distance before we merge targets
       Merge acceptance is in 2D view coordinates, so:
        - X is lateral
        - Y is forward    -->
    <mergeAcceptance>
      <x>3.0</x>
      <y>1.0</y>
    </mergeAcceptance>

    <!-- showPalette
       Rectangle color code indicator to the side is hiiden/displayed.
       0: Hide
       1: Show
     -->
    <showPalette>0</showPalette>
    
  </display2D>

  <scope>
    <!-- interval in ms -->
    <timerInterval>30</timerInterval>
    <!-- scope window:determine what curves are displayed -->
    <displayScopeDistance>true</displayScopeDistance>
    <displayScopeVelocity>true</displayScopeVelocity>
  </scope>


  <dynamicTesting>
    <!-- Max deceleration of the vehicle with full brakes on
	     Kusano-Gaeble
	     (http://www.sbes.vt.edu/gabler/publications/Kusano-Gabler-SAE-TTC_EDRs-2011-01-0576.pdf)
	     Give estimates of 0.52G (0.52 * 9,8m/s2) or 5,096 m/s2
	     Specify in m/s2 -->
    <brakingDeceleration>5.096</brakingDeceleration>

    <!-- Current speed of vehicle
	     Travel speed is a variable that should be taken from 
	     CAN measurements.
	     In the meantime, we have a variable for that
	     Specify in m/s, use <NN>km/h(60.0 * 1000)/(60*60) -->
    <travelSpeed>33.32</travelSpeed>
    <alertQty> 3 </alertQty>
    <alert0>
      <alertType>decelerationToStop</alertType>  <!-- Alert type can be "distanceWithin", "distanceOutside", "speed", "acceleration", "decelerationToStop", "TTC"(time to collision) -->
      <alertReceiver>0</alertReceiver>
      <alertChannels> 127 </alertChannels>
      <alertMin> 1.0</alertMin>  <!-- Leave min empty for minimum possible value for a float -->
      <alertMax>2.0</alertMax> <!-- Leave max empty for maximum possible value for a float -->
      <alertLevel>1</alertLevel> <!-- Alert level can be 0 (none), 1 (low), 2 (warn) or 3 (critical) -->
    </alert0>

    <alert1>
      <alertType>decelerationToStop</alertType> <!-- Alert type can be "distanceWithin", "distanceOutside", "speed", "acceleration", "decelerationToStop", "TTC"(time to collision) -->
      <alertReceiver>0</alertReceiver>
      <alertChannels> 127 </alertChannels>
      <alertMin> 2.0</alertMin> <!-- Leave min empty for minimum possible value for a float -->
      <alertMax>3.0</alertMax>  <!-- Leave max empty for maximum possible value for a float -->
      <alertLevel>2</alertLevel><!-- Alert level can be 0 (none), 1 (low), 2 (warn) or 3 (critical) -->
    </alert1>

    <alert2>
      <alertType>decelerationToStop</alertType>  <!-- Alert type can be "distanceWithin", "distanceOutside", "speed", "acceleration", "decelerationToStop", "TTC"(time to collision) -->
      <alertReceiver>0</alertReceiver>
      <alertChannels> 127 </alertChannels>
      <alertMin>3.0</alertMin> <!-- Leave min empty for minimum possible value for a float -->
      <alertMax></alertMax>    <!-- Leave max empty for maximum possible value for a float -->
      <alertLevel>3</alertLevel> <!-- Alert level can be 0 (none), 1 (low), 2 (warn) or 3 (critical) -->
    </alert2>
    
     <alert3Ignored>
      <alertType>distanceOutside</alertType>  <!-- Alert type can be "distanceWithin", "distanceOutside", "speed", "acceleration", "decelerationToStop", "TTC"(time to collision) -->
       <alertReceiver>0</alertReceiver>
       <alertChannels> 1 </alertChannels>
      <alertMin>5.0</alertMin> <!-- Leave min empty for minimum possible value for a float -->
      <alertMax>10.0</alertMax>    <!-- Leave max empty for maximum possible value for a float -->
      <alertLevel>3</alertLevel> <!-- Alert level can be 0 (none), 1 (low), 2 (warn) or 3 (critical) -->
    </alert3Ignored>

     <alert4Ignored>
      <alertType>distanceOutside</alertType> <!-- Alert type can be "distanceWithin", "distanceOutside", "speed", "acceleration", "decelerationToStop", "TTC"(time to collision) -->
       <alertReceiver>0</alertReceiver>
       <alertChannels> 2 </alertChannels>
      <alertMin>5.0</alertMin> <!-- Leave min empty for minimum possible value for a float -->
      <alertMax>10.0</alertMax>    <!-- Leave max empty for maximum possible value for a float -->
      <alertLevel>3</alertLevel> <!-- Alert level can be 0 (none), 1 (low), 2 (warn) or 3 (critical) -->
    </alert4Ignored>

    <alert5Ignored>
      <alertType>distanceOutside</alertType>
      <!-- Alert type can be "distanceWithin", "distanceOutside", "speed", "acceleration", "decelerationToStop", "TTC"(time to collision) -->
      <alertReceiver>0</alertReceiver>
      <alertChannels> 4 </alertChannels>
      <alertMin>5.0</alertMin> <!-- Leave min empty for minimum possible value for a float -->
      <alertMax>10.0</alertMax>    <!-- Leave max empty for maximum possible value for a float -->
      <alertLevel>3</alertLevel> <!-- Alert level can be 0 (none), 1 (low), 2 (warn) or 3 (critical) -->
    </alert5Ignored>

    <alert6Ignored>
      <alertType>distanceOutside</alertType>  <!-- Alert type can be "distanceWithin", "distanceOutside", "speed", "acceleration", "decelerationToStop", "TTC"(time to collision) -->
      <alertReceiver>0</alertReceiver>
      <alertChannels> 8 </alertChannels>
      <alertMin>5.0</alertMin> <!-- Leave min empty for minimum possible value for a float -->
      <alertMax>10.0</alertMax>    <!-- Leave max empty for maximum possible value for a float -->
      <alertLevel>3</alertLevel> <!-- Alert level can be 0 (none), 1 (low), 2 (warn) or 3 (critical) -->
    </alert6Ignored>
  </dynamicTesting>


  <registerDescription_RevE>
    <!-- Registers for Revision D of AWL
  Revision D includes Algo 5 test version-->
    <registersFPGA>
      <register>
        <index>R0</index>
        <address>0</address>
        <description>Version - Date</description>
      </register>

    </registersFPGA>

    <registersADC>
     </registersADC>

    <GPIOs>
    </GPIOs>

    <algos>
      <defaultAlgo>1</defaultAlgo>
      <algo>
        <!-- Algo 00 -->
        <!-- Algo00 is the Global parameters section -->
        <algoID>0</algoID>
        <algoName>Global</algoName>

    
      </algo>

      <algo>
        <!-- Algo 03 -->
        <algoID>3</algoID>
        <algoName>Algo 3</algoName>
       <parameter>
          <index>7</index>
          <address>7</address>
          <description>SNR Cutoff (dB)</description>
          <type>float</type>
          <default>24.0</default>
        </parameter>
      </algo>
    </algos>

    <trackers>
      <defaultTracker>0</defaultTracker>
      <tracker>
        <trackerID>1</trackerID>
        <trackerName>Tracker A</trackerName>

   
      </tracker>
    </trackers>
    
  </registerDescription_RevE>

  
  <GeometryAWL7>
       <!-- For multi-line sensors define wraparound and number of sensors per line.
           If sensor does not support wrap around, write a wierdly high number that 
           exceeds sensor physical range -->
      <lineWrapAround>-1</lineWrapAround>
      <channelsPerLine>8</channelsPerLine>


      <channelQty>7</channelQty>
      <channel0>
        <!--channel 0: Short-range left -->
        <fov>
          <x>9.0</x>
          <y>9.0</y>
        </fov>
        <orientation>
          <pitch>6.8</pitch>
          <roll>0.0</roll>
          <yaw>15.0</yaw>
        </orientation>
        <maxRange>25</maxRange>
        <displayColor>
          <red>192</red>
          <green>192</green>
          <blue>192</blue>
        </displayColor>
      </channel0>

      <channel1>
        <!--channel 1: short range - middle left -->
        <fov>
          <x>9.0</x>
          <y>9.0</y>
        </fov>
        <orientation>
          <pitch>6.8</pitch>
          <roll>0.0</roll>
          <yaw>5.0</yaw>
        </orientation>
        <maxRange>25</maxRange>
         <displayColor>
           <red>192</red>
           <green>192</green>
           <blue>192</blue>
         </displayColor>
      </channel1>

      <channel2>
        <!--channel 2: short range - middle right -->
        <fov>
          <x>9.0</x>
          <y>9.0</y>
        </fov>
        <orientation>
          <pitch>6.8</pitch>
          <roll>0.0</roll>
          <yaw>-5.0</yaw>
        </orientation>
        <maxRange>25</maxRange>
        <displayColor>
          <red>192</red>
          <green>192</green>
          <blue>192</blue>
        </displayColor>
      </channel2>

      <channel3>
        <!--channel 3: short range - right -->
        <fov>
          <x>9.0</x>
          <y>9.0</y>
        </fov>
        <orientation>
          <pitch>6.8</pitch>
          <roll>0.0</roll>
          <yaw>-15.0</yaw>
        </orientation>
        <maxRange>25</maxRange>
        <displayColor>
          <red>192</red>
          <green>192</green>
          <blue>192</blue>
        </displayColor>
      </channel3>

      <channel4>
        <!--channel 4: long range - left -->
        <fov>
          <x>4.3</x>
          <y>4.3</y>
        </fov>
        <orientation>
          <pitch>2.15</pitch>
          <roll>0.0</roll>
          <yaw>4.6</yaw>
        </orientation>
        <maxRange>30</maxRange>
        <displayColor>
          <red>255</red>
          <green>0</green>
          <blue>0</blue>
        </displayColor>
      </channel4>

      <channel5>
        <!--channel 5: long range - center -->
        <fov>
          <x>4.3</x>
          <y>4.3</y>
        </fov>
        <orientation>
          <pitch>2.15</pitch>
          <roll>0.0</roll>
          <yaw>0.0</yaw>
        </orientation>
        <maxRange>30</maxRange>
        <displayColor>
          <red>255</red>
          <green>0</green>
          <blue>0</blue>
        </displayColor>
      </channel5>

      <channel6>
        <!--channel 6: long range - right -->
        <fov>
          <x>4.3</x>
          <y>4.3</y>
        </fov>
        <orientation>
          <pitch>2.15</pitch>
          <roll>0.0</roll>
          <yaw>-4.6</yaw>
        </orientation>
        <maxRange>30</maxRange>
        <displayColor>
          <red>255</red>
          <green>0</green>
          <blue>0</blue>
        </displayColor>
      </channel6>
  </GeometryAWL7>

  <GeometryAWL16Array>
    <!-- For multi-line sensors define wraparound and number of sensors per line.
           If sensor does not support wrap around, write a wierdly high number that 
           exceeds sensor physical range -->
    <lineWrapAround>-1</lineWrapAround>
    <channelsPerLine>8</channelsPerLine>

    <arraySize>
      <x>8</x>
      <y>2</y>
    </arraySize>
    <arrayFOV>
      <x>11.45</x>
      <y>3.2</y>
    </arrayFOV>
    <pixelSpacing>
      <x>0.1</x>
      <y>0.7</y>
    </pixelSpacing>
    <arrayOffset>
      <x>0.5</x>
      <y>0.6</y>
    </arrayOffset>

    <maxRange>25.0</maxRange>

    <displayColor>
      <red>255</red>
      <green>128</green>
      <blue>128</blue>
    </displayColor>

    <displayColorLine0>
      <red>192</red>
      <green>192</green>
      <blue>192</blue>
    </displayColorLine0>

    <displayColorLine1>
      <red>255</red>
      <green>0</green>
      <blue>0</blue>
    </displayColorLine1>

  </GeometryAWL16Array>
</config>